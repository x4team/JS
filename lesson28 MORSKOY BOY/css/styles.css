body {
	background: black;
}

div#board {
	position: relative; /* Все элементы будут позиционироваться относительно этого */
	width: 1024px;
	height: 863px;
	margin: auto;
	background: url("../board.jpg") no-repeat; 
}

/* Элемент div области сообщений вложен в элемент div игрового поля, поэтому
   его позиция задается относительно последнего. Итак, он будет смещен на 0px
   по вертикали и на 0px по горизонтали относительно левого верхнего угла 
   элемента div игрового поля. */
div#messageArea {
	position: absolute; /* Размещаем в левом верхнем углу игрового поля */
	top: 0px;
	left: 0px;
	color: rgb(83, 175, 19);
}
/* Элемент table смещается на 173 пиксела по горизонтали от левого края и на 
   98 пикселов по вертикали от верхнего края игрового поля, поэтому таблица
   выравнивается по сетке фонового изображения */
table {
	position: absolute;
	left: 173px;
	top: 98px;
	border-spacing: 0px;
}
/* Каждый элемент td имеет четко определенную ширину и высоту, так что ячейки
   таблицы выравниваются по клеткам сетки*/
td {
	width: 94px;
	height: 94px;
}
/* Элемент form будет отображаться в правом нижнем углу игрового поля. Он немного
   скрывает числа внизу справа, но это не страшно (мы все-равно их знаем). Также
   элементу form назначается приятный зеленый цвет, соответствующий цвету фонового
   изображения.*/
form {
	position: absolute;
	bottom: 0px;
	right: 0px;
	padding: 15px;
	background-color: rgb(83, 175, 19);
}
/* Наконец, к двум элементам input применяются стили, чтобы они соответствовали
   оформлению игрового поля, - и работа закончена!*/
form input {
	background-color: rgb(152, 207, 113);
	border-color: rgb(83, 175, 19);
	font-size: 1em;
}
/* Если элемент относится к классу hit, ему назначается фоновое изображение ship.png
   Если же элемент относится к классу miss, то miss.png */
.hit {
	background: url("../ship.png") no-repeat center center;
}

.miss {
	background: url("../miss.png") no-repeat center center;
}



